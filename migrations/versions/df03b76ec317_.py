"""empty message

Revision ID: df03b76ec317
Revises: 
Create Date: 2023-05-03 13:56:18.631386

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'df03b76ec317'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('author',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('first_name', sa.String(length=30), nullable=True),
    sa.Column('last_name', sa.String(length=50), nullable=True),
    sa.Column('birth_date', sa.String(length=20), nullable=True),
    sa.Column('death_date', sa.String(length=20), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('author', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_author_last_name'), ['last_name'], unique=False)

    op.create_table('book',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=50), nullable=True),
    sa.Column('year_of_publication', sa.Integer(), nullable=True),
    sa.Column('genre', sa.String(length=30), nullable=True),
    sa.Column('short_description', sa.String(length=200), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('book', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_book_genre'), ['genre'], unique=False)
        batch_op.create_index(batch_op.f('ix_book_title'), ['title'], unique=True)
        batch_op.create_index(batch_op.f('ix_book_year_of_publication'), ['year_of_publication'], unique=False)

    op.create_table('book_author',
    sa.Column('book_id', sa.Integer(), nullable=False),
    sa.Column('author_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['author_id'], ['author.id'], ),
    sa.ForeignKeyConstraint(['book_id'], ['book.id'], ),
    sa.PrimaryKeyConstraint('book_id', 'author_id')
    )
    op.create_table('bookcase',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('book_id', sa.Integer(), nullable=True),
    sa.Column('status', sa.String(length=10), nullable=True),
    sa.Column('who_borrowed', sa.String(length=50), nullable=True),
    sa.ForeignKeyConstraint(['book_id'], ['book.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('bookcase', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_bookcase_status'), ['status'], unique=False)
        batch_op.create_index(batch_op.f('ix_bookcase_who_borrowed'), ['who_borrowed'], unique=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('bookcase', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_bookcase_who_borrowed'))
        batch_op.drop_index(batch_op.f('ix_bookcase_status'))

    op.drop_table('bookcase')
    op.drop_table('book_author')
    with op.batch_alter_table('book', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_book_year_of_publication'))
        batch_op.drop_index(batch_op.f('ix_book_title'))
        batch_op.drop_index(batch_op.f('ix_book_genre'))

    op.drop_table('book')
    with op.batch_alter_table('author', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_author_last_name'))

    op.drop_table('author')
    # ### end Alembic commands ###
